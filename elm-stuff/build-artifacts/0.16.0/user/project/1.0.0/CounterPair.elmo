Elm.CounterPair = Elm.CounterPair || {};
Elm.CounterPair.make = function (_elm) {
   "use strict";
   _elm.CounterPair = _elm.CounterPair || {};
   if (_elm.CounterPair.values) return _elm.CounterPair.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Counter = Elm.Counter.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var view = F2(function (address,model) {
      return A2($Html.div,
      _U.list([]),
      _U.list([A2($Counter.view,{ctor: "_Tuple0"},model.topCounter)
              ,A2($Counter.view,{ctor: "_Tuple0"},model.bottomCounter)
              ,A2($Html.button,_U.list([]),_U.list([$Html.text("RESET")]))]));
   });
   var update = F2(function (action,model) {    return model;});
   var init = F2(function (top,bottom) {
      return {topCounter: $Counter.init(top)
             ,bottomCounter: $Counter.init(bottom)};
   });
   return _elm.CounterPair.values = {_op: _op
                                    ,init: init
                                    ,update: update
                                    ,view: view};
};